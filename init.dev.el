(defun jobsimi::js-mode-hook ()
  (electric-pair-mode)
  (setf indent-tabs-mode nil)
  )
(with-eval-after-load (quote js)
  (add-hook (quote js-mode-hook) (function jobsimi::js-mode-hook)))
(setf package-archives
      (quote
       (("gnu"   . "http://mirrors.tuna.tsinghua.edu.cn/elpa/gnu/")
	("melpa" . "http://mirrors.tuna.tsinghua.edu.cn/elpa/melpa/"))))
(setf user-emacs-directory "d:/sxtcProjects/.emacs.d/")
(defun jobsimi::package-initialize()
  (unless (and (boundp (quote package--initialized))
               package--initialized)
    (package-initialize)))
(defun jobsimi::unless-package-install (function package)
    (jobsimi::package-initialize)
  (unless (functionp function)
    (package-install package)))
(defun jobsimi:fullscreen()
  (interactive)
  (jobsimi::unless-package-install (function global-company-mode) (quote company))
  (global-company-mode)
  (global-font-lock-mode))
(global-set-key (kbd "<f11>")(function jobsimi:fullscreen))
(defun jobsimi::emacs-lisp-mode-hook()
  (electric-pair-mode)
  (setf indent-tabs-mode nil))
(with-eval-after-load (quote elisp-mode)
  (add-hook (quote emacs-lisp-mode-hook) (function jobsimi::emacs-lisp-mode-hook)))
(defun jobsimi::install-counsel()
  (jobsimi::unless-package-install (function counsel-M-x) (quote counsel))
  (jobsimi::unless-package-install (function ivy-mode) (quote ivy))
  (jobsimi::unless-package-install (function smex) (quote smex)))
(defun jobsimi:execute-extended-command()
  (interactive)
  (jobsimi::install-counsel)
  (call-interactively (function counsel-M-x)))
(global-set-key (kbd "M-x") (function jobsimi:execute-extended-command))
(defun jobsimi:switch-to-buffer()
  (interactive)
  (jobsimi::install-counsel)
  (call-interactively (function counsel-switch-buffer)))
(global-set-key (kbd "C-x b") (function jobsimi:switch-to-buffer))
(defun jobsimi:find-file()
  (interactive)
  (jobsimi::install-counsel)
  (call-interactively (function counsel-find-file)))
(global-set-key (kbd "C-x C-f") (function jobsimi:find-file))
(defun jobsimi:dired()
  (interactive)
  (jobsimi::install-counsel)
  (call-interactively (function counsel-dired)))
(global-set-key (kbd "C-x d") (function jobsimi:dired))
(with-eval-after-load (quote ivy)
  (unless ivy-use-virtual-buffers
    (ivy-mode)
    (setq-default ivy-use-virtual-buffers t
                  ivy-count-format ""
                  projectile-completion-system 'ivy)
    (define-key ivy-minibuffer-map (kbd "RET") (function ivy-alt-done))))
